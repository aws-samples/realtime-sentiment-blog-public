AWSTemplateFormatVersion: '2010-09-09'
Description: Kinesis Stream

Outputs:
  FullSentimentBucketArn: 
    Value: !GetAtt FullSentimentBucket.Arn
  TargetedSentimentBucketArn: 
    Value: !GetAtt TargetedSentimentBucket.Arn
  FullSentimentDataStreamArn:
    Value: !GetAtt FullSentimentDataStream.Arn
  TargetedSentimentDataStreamArn:
    Value: !GetAtt TargetedSentimentDataStream.Arn
  FullSentimentDeliveryStreamArn:
    Value: !GetAtt FullSentimentDeliveryStream.Arn
  TargetedSentimentDeliveryStreamArn:
    Value: !GetAtt TargetedSentimentDeliveryStream.Arn

Parameters:
  Suffix:
    Type: String
    Description: A unique suffix for your S3 buckets

Resources:
  FullSentimentBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Join 
        - ''
        - - 'cf-firehose-full-sentiment-bucket-'
          - !Ref Suffix

  TargetedSentimentBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Join 
        - ''
        - - 'cf-firehose-targeted-sentiment-bucket-'
          - !Ref Suffix

  FullSentimentDataStream: 
    Type: AWS::Kinesis::Stream 
    Properties: 
      Name: cf-kinesis-full-sentiment-data-stream 
      ShardCount: 1

  TargetedSentimentDataStream: 
    Type: AWS::Kinesis::Stream 
    Properties: 
      Name: cf-kinesis-targeted-sentiment-data-stream 
      ShardCount: 1

  MyStreamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref 'AWS::AccountId'

  MyStreamPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: my_firehose_stream_policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'kinesis:DescribeStream'
              - 'kinesis:GetShardIterator'
              - 'kinesis:GetRecords'
              - 'kinesis:ListShards'
            Resource: 
              - !GetAtt FullSentimentDataStream.Arn
              - !GetAtt TargetedSentimentDataStream.Arn
      Roles:
        - !Ref MyStreamRole
    DependsOn: 
      - FullSentimentDataStream
      - TargetedSentimentDataStream
      - MyStreamRole

  MyDeliveryRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref 'AWS::AccountId'

  MyDeliveryPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: my_firehose_delivery_policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:AbortMultipartUpload'
              - 's3:GetBucketLocation'
              - 's3:GetObject'
              - 's3:ListBucket'
              - 's3:ListBucketMultipartUploads'
              - 's3:PutObject'
            Resource:
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref FullSentimentBucket
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref FullSentimentBucket
                  - '/*'
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref TargetedSentimentBucket
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref TargetedSentimentBucket
                  - '/*'
          - Effect: Allow
            Action:
              - 'logs:PutLogEvents'
            Resource: 
              - '*'
      Roles:
        - !Ref MyDeliveryRole
    DependsOn: 
      - FullSentimentDataStream
      - TargetedSentimentDataStream
      - MyDeliveryRole

  FullSentimentDeliveryStream: 
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: cf-firehose-full-sentiment-delivery-stream
      DeliveryStreamType: KinesisStreamAsSource
      KinesisStreamSourceConfiguration: 
        KinesisStreamARN: !GetAtt FullSentimentDataStream.Arn
        RoleARN: !GetAtt MyStreamRole.Arn
      ExtendedS3DestinationConfiguration: 
        BucketARN: !GetAtt FullSentimentBucket.Arn
        RoleARN: !GetAtt MyDeliveryRole.Arn
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 1
    DependsOn:
      - FullSentimentBucket 
      - FullSentimentDataStream
      - MyStreamRole
      - MyStreamPolicy
      - MyDeliveryRole
      - MyDeliveryPolicy

  TargetedSentimentDeliveryStream: 
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: cf-firehose-targeted-sentiment-delivery-stream
      DeliveryStreamType: KinesisStreamAsSource
      KinesisStreamSourceConfiguration: 
        KinesisStreamARN: !GetAtt TargetedSentimentDataStream.Arn
        RoleARN: !GetAtt MyStreamRole.Arn
      ExtendedS3DestinationConfiguration: 
        BucketARN: !GetAtt TargetedSentimentBucket.Arn
        RoleARN: !GetAtt MyDeliveryRole.Arn
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 1
    DependsOn:
      - TargetedSentimentBucket 
      - TargetedSentimentDataStream
      - MyStreamRole
      - MyStreamPolicy
      - MyDeliveryRole
      - MyDeliveryPolicy
